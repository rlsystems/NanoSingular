{"version":3,"file":"static/js/974.138c50a9.chunk.js","mappings":"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","sources":["app/utils/checkPasswordStrength.ts","components/StyledFormControlLabel.tsx","components/formInput/InputsLight.tsx","app/utils/convertSlug.ts","icons/PasswordIcon.tsx","icons/ProfileIcon.tsx","app/utils/getBase64.ts","pages/profile/tabs/UserInfo/ImagePopover.tsx","pages/profile/tabs/UserInfo/UserInfo.tsx","pages/profile/tabs/Preferences.tsx","pages/profile/tabs/Password.tsx","icons/SettingIcon.tsx","pages/profile/AccountSettings.tsx"],"sourcesContent":["export type CheckPasswordValidationOptionsType = 'length' | 'lowerCase' | 'upperCase' | 'number' | 'specialCharacter';\r\n\r\nexport type CheckPasswordOptionsType = {\r\n  checkFor: CheckPasswordValidationOptionsType[],\r\n}\r\n\r\nconst validationOptions = {\r\n  length:  new RegExp('(?=.{6,})'),\r\n  lowerCase: new RegExp('(?=.*[a-z])'),\r\n  upperCase: new RegExp('(?=.*[A-Z])'),\r\n  number:  new RegExp('(?=.*[0-9])'),\r\n  specialCharacter: new RegExp('(?=.*[^A-Za-z0-9])')\r\n}\r\n\r\nexport interface CheckPasswordResult {\r\n    strength: number;\r\n    passedFor: CheckPasswordValidationOptionsType[];\r\n}\r\n\r\nconst checkPasswordStrength = (password: string, options: CheckPasswordOptionsType): CheckPasswordResult => {\r\n    let calculatedStrength = 0;\r\n    const passedFor: CheckPasswordValidationOptionsType[] = [];\r\n    const raiseStrengthBy = (100 / options.checkFor.length).toFixed(2);\r\n    options.checkFor.forEach(option => {\r\n        if (validationOptions[option]?.test(password)) {\r\n            passedFor.push(option)\r\n            calculatedStrength += parseFloat(raiseStrengthBy);\r\n        }\r\n    })\r\n    return {strength: calculatedStrength, passedFor};\r\n};\r\n\r\nexport default checkPasswordStrength","import { FormControlLabel, styled } from \"@mui/material\";\r\n\r\n\r\nconst StyledFormControlLabel = styled(FormControlLabel)(() => ({\r\n    \"& .MuiTypography-root\": {\r\n        fontWeight: 600,\r\n    },\r\n}));\r\n\r\nexport default StyledFormControlLabel;","import { InputBase, styled, TextField, TextFieldProps } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\n// text input\r\nconst StyledTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    border: \"2px solid\",\r\n    borderColor:\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.secondary[300]\r\n        : theme.palette.divider,\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.secondary[300],\r\n  },\r\n}));\r\n\r\nexport const LightTextField = (props: TextFieldProps) => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\n\r\n// select input (dropdown)\r\nexport const StyledSelectInput = styled(InputBase)(({ theme }) => ({\r\n  height: 50,\r\n  fontSize: 12,\r\n  width: \"100%\",\r\n  fontWeight: 600,\r\n  padding: \"0 8px\",\r\n  border: \"2px solid\",\r\n  borderRadius: \"8px\",\r\n  color: theme.palette.text.primary,\r\n  borderColor:\r\n    theme.palette.mode === \"light\"\r\n      ? theme.palette.secondary[300]\r\n      : theme.palette.divider,\r\n  \"& .MuiPopover-paper\": { boxShadow: \"none\" },\r\n  \"& > .MuiSelect-select\": { paddingRight: \"0 !important\" },\r\n}));\r\n\r\n\r\n// pagination select dropdown\r\nexport const PaginationSelectInput = styled(InputBase)(({ theme }) => ({\r\n  marginRight: theme.spacing(2),\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid rgba(36, 153, 239, 0.5)',\r\n    fontSize: 12,\r\n    fontWeight: 500,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: theme.palette.primary.main,\r\n      boxShadow: '0 0 0 0.2rem rgba(36, 153, 239, 0.25)',\r\n    },\r\n  },\r\n}));","const convertToSlug = (text: string) => {\n  return text\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/[^\\w-]+/g, \"\");\n};\nexport default convertToSlug;\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst PasswordIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" {...props}>\n      <path d=\"M18,10V8A6,6,0,0,0,6,8v2a2,2,0,0,0-2,2v8a2,2,0,0,0,2,2H18a2,2,0,0,0,2-2V12A2,2,0,0,0,18,10ZM8,8a4,4,0,0,1,8,0v2H8Zm7,7.5a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5v1a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5Zm-4,0a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5v1a.5.5,0,0,1-.5.5h-1a.5.5,0,0,1-.5-.5Zm-4,1v-1a.5.5,0,0,1,.5-.5h1a.5.5,0,0,1,.5.5v1a.5.5,0,0,1-.5.5h-1A.5.5,0,0,1,7,16.5Z\" />\n    </SvgIcon>\n  );\n};\n\nexport default PasswordIcon;\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst ProfileIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon viewBox=\"0 0 17 21\" {...props}>\n      <path\n        d=\"M11.4766 9.90449C12.7564 8.97117 13.5897 7.4607 13.5897 5.75906C13.5897 2.93137 11.2892 0.630859 8.46152 0.630859C5.63383 0.630859 3.33332 2.93137 3.33332 5.75906C3.33332 7.4607 4.16664 8.97117 5.44641 9.90449C2.26516 11.1219 0 14.2063 0 17.8104C0 19.3656 1.26527 20.6309 2.82051 20.6309H14.1025C15.6578 20.6309 16.923 19.3656 16.923 17.8104C16.923 14.2063 14.6579 11.1219 11.4766 9.90449ZM4.8718 5.75906C4.8718 3.77969 6.48215 2.16934 8.46152 2.16934C10.4409 2.16934 12.0512 3.77969 12.0512 5.75906C12.0512 7.73844 10.4409 9.34883 8.46152 9.34883C6.48215 9.34883 4.8718 7.73844 4.8718 5.75906ZM14.1025 19.0924H2.82051C2.11359 19.0924 1.53848 18.5173 1.53848 17.8103C1.53848 13.9929 4.6441 10.8872 8.46156 10.8872C12.279 10.8872 15.3846 13.9929 15.3846 17.8103C15.3846 18.5173 14.8095 19.0924 14.1025 19.0924Z\"\n        fill=\"currentColor\"\n      />\n    </SvgIcon>\n  );\n};\n\nexport default ProfileIcon;\n","const getBase64 = (file: File) => {\r\n    return new Promise((res, rej) => {\r\n        const reader = new FileReader();\r\n        reader.onload = e => res(e?.target?.result); //define condition if loaded correctly\r\n        reader.onerror = e => rej(e); //define condition if loaded incorrectly\r\n        reader.readAsDataURL(file); //the actual operation\r\n    });\r\n    \r\n};\r\n\r\nexport default getBase64","import { FC, Fragment, useRef, useState } from \"react\";\r\nimport {  Box, IconButton, styled } from \"@mui/material\";\r\nimport { Small} from \"components/Typography\";\r\nimport ProfileMenu from \"components/PopoverMenu\";\r\nimport { CameraAlt } from \"@mui/icons-material\";\r\n\r\nconst StyledSmall = styled(Small)(({ theme }) => ({\r\n  display: \"block\",\r\n  padding: \"5px 1rem\",\r\n  cursor: \"pointer\",\r\n  \"&:hover\": {\r\n    color: theme.palette.primary.main,\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.secondary.light\r\n        : theme.palette.divider,\r\n  },\r\n}));\r\n\r\ninterface ImagePopoverProps {\r\n  handleImageUpdate: React.ChangeEventHandler<HTMLInputElement>,\r\n  handleImageRemove: () => void\r\n}\r\n\r\nconst ImagePopover: FC<ImagePopoverProps> = (props) => {\r\n  const anchorRef = useRef(null);\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const handlePopoverOpen = () => setOpen(true);\r\n  const handlePopoverClose = () => setOpen(false);\r\n\r\n  const handleImageUpdateClick: React.ChangeEventHandler<HTMLInputElement> = (evt) => {\r\n    props.handleImageUpdate(evt);\r\n    handlePopoverClose();\r\n  };\r\n  const handleImageRemoveClick = () => {\r\n    props.handleImageRemove();\r\n    handlePopoverClose();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <IconButton size=\"small\" onClick={handlePopoverOpen} ref={anchorRef}>\r\n        <CameraAlt\r\n          sx={{ fontSize: 16, color: \"background.paper\" }}\r\n        />\r\n      </IconButton>\r\n      <ProfileMenu\r\n        maxWidth={230}\r\n        minWidth={200}\r\n        popoverOpen={open}\r\n        anchorRef={anchorRef}\r\n        popoverClose={handlePopoverClose}\r\n        noHeader\r\n      >\r\n        <Box pt={1}>\r\n          <label htmlFor=\"icon-button-file\">\r\n            <input\r\n              onChange={handleImageUpdateClick}\r\n              name=\"imageFile\"\r\n              type=\"file\"\r\n              accept=\"image/*\"\r\n              id=\"icon-button-file\"\r\n              style={{ display: \"none\" }}\r\n            />\r\n            <StyledSmall\r\n            >\r\n              Upload Picture\r\n            </StyledSmall>\r\n          </label>\r\n          <StyledSmall\r\n            onClick={handleImageRemoveClick}\r\n          >\r\n            Remove Picture\r\n          </StyledSmall>\r\n        </Box>\r\n      </ProfileMenu>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ImagePopover;\r\n","import { FC, useState } from \"react\";\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Card,\r\n  Grid,\r\n  styled,\r\n} from \"@mui/material\";\r\nimport FlexBox from \"components/FlexBox\";\r\nimport {LightTextField} from \"components/formInput/InputsLight\";\r\nimport { H5, Tiny } from \"components/Typography\";\r\nimport NanoAvatar from \"components/NanoAvatar\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useStore } from \"app/stores/store\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { UpdateProfileRequest } from \"app/models/currentUser\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { toast } from \"material-react-toastify\";\r\nimport getBase64 from \"app/utils/getBase64\";\r\nimport ImagePopover from \"./ImagePopover\";\r\n\r\nconst UserInfo: FC = () => {\r\n  const {\r\n    currentUserStore: {\r\n      currentUser, updateCurrentUser, getCurrentUser\r\n    }\r\n  } = useStore();\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [tempImage, setTempImage] = useState(currentUser?.imageUrl)\r\n\r\n  const [userFormValues, setUserFormValues] = useState<UpdateProfileRequest>({ //Local State\r\n    id: currentUser?.id || \"\",\r\n    firstName: currentUser?.firstName || \"\",\r\n    lastName: currentUser?.lastName || \"\",\r\n    phoneNumber: currentUser?.phoneNumber || \"\",\r\n    email: currentUser?.email || \"\",\r\n    imageFile: undefined,\r\n    imageUrl: currentUser?.imageUrl || \"\",\r\n    deleteCurrentImage: false\r\n  });\r\n\r\n  const fieldValidationSchema = Yup.object().shape({\r\n    firstName: Yup.string()\r\n      .min(3, \"Too Short\")\r\n      .required(\"First Name is Required!\"),\r\n    lastName: Yup.string().required(\"Last Name is Required!\"),\r\n    email: Yup.string().required('The email is required').email(),\r\n  });\r\n\r\n  const { values, errors, touched, handleChange, handleSubmit, handleBlur, isSubmitting, isValid, dirty, setFieldValue, resetForm } = useFormik({\r\n    initialValues: userFormValues,\r\n    validationSchema: fieldValidationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: async (values) => {\r\n      setIsUpdating(true);\r\n      await updateCurrentUser(values);\r\n      toast.dark(\"Profile Updated\"); \r\n      resetForm(); \r\n      setIsUpdating(false);\r\n      setUserFormValues(values); \r\n      await getCurrentUser();\r\n\r\n    },\r\n  });\r\n\r\n  const handleImageUpload: React.ChangeEventHandler<HTMLInputElement> = async (evt) => {\r\n    const file = evt.target?.files?.[0];\r\n    setFieldValue(\"imageFile\", file); //formik\r\n    const base64 = await getBase64(file!) as string;\r\n    if (base64) setTempImage(base64);\r\n  }\r\n\r\n  const handleImageRemove = async () => {\r\n    await updateCurrentUser({ ...values, deleteCurrentImage: true });\r\n    setTempImage(\"\");\r\n  }\r\n\r\n\r\n const StyledBadge = styled(Badge)(({ theme }) => ({\r\n    \"& .MuiBadge-badge\": {\r\n      width: 25,\r\n      height: 25,\r\n      borderRadius: \"50%\",\r\n      backgroundColor: theme.palette.primary.main,\r\n      boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <Card sx={{ padding: \"1.5rem\", pb: \"4rem\" }}>\r\n      <H5>Edit your account information:</H5>\r\n      <form onSubmit={handleSubmit}>\r\n        <FlexBox\r\n          my=\"1.5rem\"\r\n          flexWrap=\"wrap\"\r\n          alignItems=\"center\"\r\n          justifyContent=\"space-between\"\r\n        >\r\n          <FlexBox alignItems=\"center\">\r\n            <StyledBadge\r\n              overlap=\"circular\"\r\n              anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\r\n              badgeContent={\r\n                <ImagePopover\r\n                  handleImageUpdate={handleImageUpload}\r\n                  handleImageRemove={handleImageRemove}\r\n                />\r\n              }\r\n            >\r\n              <NanoAvatar\r\n                alt=\"Avatar\"\r\n                src={tempImage || \"\"}\r\n                sx={{ width: 90, height: 90 }}\r\n              />\r\n            </StyledBadge>\r\n            <Box ml=\"1rem\">\r\n              <H5>{currentUser?.firstName}</H5>\r\n              <Tiny color=\"text.disabled\" sx={{ textTransform: \"capitalize\" }}>{currentUser?.roleId} Level User</Tiny>\r\n            </Box>\r\n          </FlexBox>\r\n        </FlexBox>\r\n        <Grid container spacing={4} mt={1}>\r\n          <Grid item xs={12} sm={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"firstName\"\r\n              label=\"First Name\"\r\n              value={values.firstName}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              helperText={touched.firstName && errors.firstName}\r\n              error={Boolean(touched.firstName && errors.firstName)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"lastName\"\r\n              label=\"Last Name\"\r\n              value={values.lastName}\r\n              onBlur={handleBlur}\r\n              onChange={handleChange}\r\n              helperText={touched.lastName && errors.lastName}\r\n              error={Boolean(touched.lastName && errors.lastName)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"email\"\r\n              label=\"Email\"\r\n              value={values.email}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.email && errors.email}\r\n              error={Boolean(touched.email && errors.email)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} >\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"phoneNumber\"\r\n              label=\"Phone Number\"\r\n              value={values.phoneNumber}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.phoneNumber && errors.phoneNumber}\r\n              error={Boolean(touched.phoneNumber && errors.phoneNumber)}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} display=\"flex\" justifyContent=\"flex-end\" mt={3}>\r\n            <LoadingButton \r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={!dirty || !isValid || isSubmitting}\r\n              loading={isUpdating}\r\n            >\r\n              Save Changes\r\n            </LoadingButton>\r\n          </Grid>\r\n\r\n\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\nexport default observer(UserInfo);\r\n","import { KeyboardArrowDown } from \"@mui/icons-material\";\nimport { Box, Button, Card, Grid, MenuItem, Select, Switch } from \"@mui/material\";\nimport { H5, H6, Tiny } from \"../../../components/Typography\";\nimport { FC, useState } from \"react\";\nimport { StyledSelectInput } from \"components/formInput/InputsLight\";\nimport StyledFormControlLabel  from \"components/StyledFormControlLabel\";\nimport FlexBox from \"components/FlexBox\";\nimport { useStore } from \"app/stores/store\";\nimport { UpdatePreferencesRequest } from \"app/models/currentUser\";\nimport { useFormik } from \"formik\";\nimport { toast } from \"material-react-toastify\";\nimport { LoadingButton } from \"@mui/lab\";\n\nconst Preferences: FC = () => {\n  const { currentUserStore } = useStore();\n  const { currentUser, updatePreferences, getCurrentUser } = currentUserStore;\n  const darkModeDefault = currentUser ? currentUser?.darkModeDefault : true;\n  const [isUpdating, setIsUpdating] = useState(false);\n\n  const [preferencesFormValues, setPreferencesFormValues] = useState<UpdatePreferencesRequest>({ //Local State\n    darkModeDefault: darkModeDefault,\n    pageSizeDefault: currentUser?.pageSizeDefault || 10,\n\n  });\n\n  const { values, errors, touched, handleChange, handleSubmit, handleBlur, isSubmitting, isValid, dirty, setFieldValue, resetForm } = useFormik({\n    initialValues: preferencesFormValues,\n    enableReinitialize: true,\n    onSubmit: async (values) => {\n      setIsUpdating(true);\n      await updatePreferences(values);\n      toast.dark(\"Preferences Updated\"); \n    \n      resetForm(); \n      setIsUpdating(false);\n\n      setPreferencesFormValues(values); \n      await getCurrentUser();\n    },\n  });\n\n  return (\n    <Card sx={{ padding: 3, pb: 5 }}>\n      <H5 mb={2}>Preferences</H5>\n      <form onSubmit={handleSubmit}>\n        <Grid container gap={4} >\n          <Grid item xs={7} mt={2}>\n            <H6 mb={1}>Page Size Default</H6>\n            <Select\n              sx={{ maxWidth: \"180px\" }}\n              name=\"pageSizeDefault\"\n              value={values.pageSizeDefault}\n              onChange={handleChange}\n              IconComponent={() => <KeyboardArrowDown />}\n              input={<StyledSelectInput />}\n            >\n              {[5, 10, 25, 50, 100].map((item) => (\n                <MenuItem value={item} sx={{ fontSize: 12, fontWeight: 500 }}>\n                  {item}\n                </MenuItem>\n              ))}\n            </Select>\n          </Grid>\n          <Grid item xs={7}>\n            <StyledFormControlLabel\n              label={\n                <Label\n                  title=\"Dark Mode\"\n                  body=\"Set dark mode as default mode.\"\n                />\n              }\n              control={<Switch \n                name=\"darkModeDefault\"\n                checked={values.darkModeDefault} \n                onChange={handleChange} />}\n              sx={{ mt: \"1rem\" }}\n            />\n          </Grid>\n        </Grid>\n        <FlexBox justifyContent={\"flex-end\"}>\n          <LoadingButton\n            type=\"submit\"\n            variant=\"contained\"\n            disabled={!dirty || !isValid || isSubmitting}\n            loading={isUpdating} \n          >\n            Save Changes\n          </LoadingButton>\n        </FlexBox>\n      </form>\n    </Card>\n  );\n};\n\nfunction Label({ title, body }: { title: string; body: string }) {\n  return (\n    <Box>\n      <H6>{title}</H6>\n      <Tiny fontWeight={500} color=\"text.disabled\">\n        {body}\n      </Tiny>\n    </Box>\n  );\n}\n\nexport default Preferences;\n","import { Box, Card, Grid, LinearProgress } from \"@mui/material\";\r\nimport { LightTextField } from \"../../../components/formInput/InputsLight\";\r\nimport { H5, H6, Tiny } from \"../../../components/Typography\";\r\nimport React, { FC, useState } from \"react\";\r\nimport { useStore } from \"app/stores/store\";\r\nimport { ChangePasswordRequest } from \"app/models/currentUser\";\r\nimport * as Yup from \"yup\";\r\nimport { useFormik } from \"formik\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { toast } from \"material-react-toastify\";\r\nimport checkPasswordStrength from \"app/utils/checkPasswordStrength\";\r\n\r\nconst Password: FC = () => {\r\n  const { currentUserStore, commonStore } = useStore();\r\n  const { changePassword } = currentUserStore;\r\n  const [strength, setStrength] = useState(0);\r\n\r\n  const [passwordFormValues, setPasswordFormValues] = useState<ChangePasswordRequest>({ //Local State\r\n    password: \"\",\r\n    newPassword: \"\",\r\n    confirmNewPassword: \"\",\r\n\r\n  });\r\n\r\n  const fieldValidationSchema = Yup.object().shape({\r\n    password: Yup.string()\r\n      .required(\"Current password is required!\"),\r\n    newPassword: Yup.string()\r\n      .required(\"New password is required!\"),\r\n    confirmNewPassword: Yup.string()\r\n      .required(\"Confirm new password is required!\").oneOf([Yup.ref('newPassword')], 'Your passwords do not match!'),\r\n  });\r\n\r\n  const { values, errors, touched, handleChange, handleSubmit, handleBlur, isSubmitting, resetForm, isValid, dirty } = useFormik({\r\n    initialValues: passwordFormValues,\r\n    validationSchema: fieldValidationSchema,\r\n    onSubmit: async (values) => {\r\n      const result = await changePassword(values);\r\n      if (result?.succeeded === true) {\r\n        toast.dark(\"Password updated\");\r\n      } else {\r\n        toast.error(\"Problem updating password\");\r\n      }\r\n      setStrength(10);\r\n      resetForm();\r\n    },\r\n  });\r\n\r\n  const handlePasswordFieldChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    handleChange(e);\r\n    const newPassword = e.target.value;\r\n    const passwordStrength = checkPasswordStrength(newPassword, {\r\n      checkFor: ['length', 'lowerCase', 'upperCase', 'number']\r\n    }).strength\r\n    setStrength(passwordStrength);\r\n  }\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        padding: 3,\r\n        pb: 5,\r\n        \"& li\": {\r\n          fontSize: 10,\r\n          fontWeight: 500,\r\n          color: \"text.disabled\",\r\n        },\r\n      }}\r\n    >\r\n      <H5>Change Your Password</H5>\r\n      <form onSubmit={handleSubmit}>\r\n        <Grid container columnSpacing={6}>\r\n          <Grid item xs={12} md={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"newPassword\"\r\n              type=\"password\"\r\n              value={values.newPassword}\r\n              onChange={handlePasswordFieldChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.newPassword && errors.newPassword}\r\n              error={Boolean(touched.newPassword && errors.newPassword)}\r\n              sx={{ mt: 2, mb: 1 }}\r\n              placeholder=\"Enter new password\"\r\n            />\r\n            <LinearProgress variant=\"determinate\" value={strength} color={ strength === 100 ? \"success\" : \"error\" } />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"confirmNewPassword\"\r\n              type=\"password\"\r\n              value={values.confirmNewPassword}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.confirmNewPassword && errors.confirmNewPassword}\r\n              error={Boolean(touched.confirmNewPassword && errors.confirmNewPassword)}\r\n              sx={{ mt: 2 }}\r\n              placeholder=\"Confirm new password\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} md={6}>\r\n            <LightTextField\r\n              fullWidth\r\n              name=\"password\"\r\n              type=\"password\"\r\n              value={values.password}\r\n              onChange={handleChange}\r\n              onBlur={handleBlur}\r\n              helperText={touched.password && errors.password}\r\n              error={Boolean(touched.password && errors.password)}\r\n              sx={{ mt: 2 }}\r\n              placeholder=\"Enter current password\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Box paddingTop={3}>\r\n              <H6>Password requirements:</H6>\r\n              <Tiny fontWeight={500} color=\"text.disabled\">\r\n                Ensure that these requirements are met:\r\n              </Tiny>\r\n              <ul>\r\n                <li>Minimum 6 characters long</li>\r\n                <li>At least one lowercase character</li>\r\n                <li>At least one uppercase character</li>\r\n                <li>At least one number</li>\r\n              </ul>\r\n\r\n            </Box>\r\n\r\n          </Grid>\r\n          <Grid item xs={12} display=\"flex\" justifyContent=\"flex-end\">\r\n            <LoadingButton\r\n              variant=\"contained\"\r\n              disabled={!dirty || !isValid || isSubmitting}\r\n              loading={isSubmitting}\r\n              type=\"submit\">\r\n              Save Changes\r\n            </LoadingButton>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Password;\r\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst SettingIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon viewBox=\"0 0 16 16\" {...props}>\n      <g clipPath=\"url(#clip0)\">\n        <path\n          d=\"M8.50206 16H7.49791C6.68575 16 6.02497 15.3393 6.02497 14.5271V14.1874C5.67969 14.0771 5.34422 13.9378 5.02194 13.771L4.78119 14.0118C4.19809 14.5956 3.26406 14.5785 2.69791 14.0116L1.98819 13.3019C1.42103 12.7353 1.40472 11.8016 1.98837 11.2186L2.22894 10.978C2.06216 10.6558 1.92294 10.3203 1.81259 9.975H1.47291C0.660781 9.975 0 9.31425 0 8.50209V7.49791C0 6.68575 0.660781 6.025 1.47294 6.025H1.81263C1.92297 5.67969 2.06219 5.34425 2.22897 5.02197L1.98822 4.78125C1.40491 4.19856 1.421 3.26475 1.98841 2.69797L2.69819 1.98822C3.26566 1.41997 4.19947 1.40578 4.78144 1.98841L5.02197 2.22894C5.34425 2.06219 5.67972 1.92294 6.025 1.81259V1.47291C6.025 0.66075 6.68575 0 7.49794 0H8.50209C9.31425 0 9.975 0.66075 9.975 1.47291V1.81263C10.3203 1.92294 10.6558 2.06219 10.978 2.22897L11.2188 1.98822C11.8019 1.40441 12.7359 1.42153 13.3021 1.98844L14.0118 2.69812C14.5789 3.26466 14.5953 4.19838 14.0116 4.78141L13.771 5.02197C13.9378 5.34425 14.077 5.67966 14.1874 6.025H14.5271C15.3392 6.025 16 6.68575 16 7.49791V8.50209C16 9.31425 15.3392 9.975 14.5271 9.975H14.1874C14.077 10.3203 13.9378 10.6558 13.771 10.978L14.0118 11.2188C14.5951 11.8015 14.579 12.7353 14.0116 13.3021L13.3018 14.0118C12.7343 14.5801 11.8005 14.5943 11.2186 14.0116L10.978 13.7711C10.6558 13.9378 10.3203 14.0771 9.975 14.1874V14.5272C9.975 15.3392 9.31425 16 8.50206 16ZM5.17866 12.7866C5.62637 13.0513 6.10825 13.2514 6.61088 13.3811C6.81787 13.4345 6.9625 13.6212 6.9625 13.835V14.5271C6.9625 14.8223 7.20272 15.0625 7.49794 15.0625H8.50209C8.79731 15.0625 9.03753 14.8223 9.03753 14.5271V13.835C9.03753 13.6212 9.18216 13.4345 9.38916 13.3811C9.89178 13.2514 10.3737 13.0513 10.8214 12.7866C11.0056 12.6776 11.2401 12.7073 11.3915 12.8586L11.8817 13.3489C12.0931 13.5605 12.4325 13.5556 12.6387 13.3491L13.3489 12.6389C13.5546 12.4335 13.5615 12.094 13.3491 11.8819L12.8587 11.3914C12.7073 11.2401 12.6777 11.0055 12.7866 10.8213C13.0514 10.3737 13.2514 9.89178 13.3811 9.38912C13.4346 9.18213 13.6213 9.03753 13.835 9.03753H14.5271C14.8223 9.03753 15.0625 8.79734 15.0625 8.50212V7.49794C15.0625 7.20272 14.8223 6.96253 14.5271 6.96253H13.835C13.6212 6.96253 13.4346 6.81791 13.3811 6.61094C13.2514 6.10828 13.0514 5.62641 12.7866 5.17872C12.6777 4.99453 12.7073 4.75997 12.8587 4.60866L13.3489 4.11837C13.5609 3.90669 13.5553 3.56731 13.3491 3.36134L12.639 2.65119C12.4331 2.44506 12.0936 2.43903 11.8819 2.651L11.3915 3.14147C11.2402 3.29281 11.0056 3.32244 10.8214 3.2135C10.3737 2.94872 9.89181 2.74869 9.38919 2.61897C9.18219 2.56556 9.03756 2.37888 9.03756 2.16509V1.47291C9.03756 1.17769 8.79734 0.9375 8.50212 0.9375H7.49797C7.20275 0.9375 6.96253 1.17769 6.96253 1.47291V2.16503C6.96253 2.37881 6.81791 2.5655 6.61091 2.61891C6.10828 2.74863 5.62641 2.94866 5.17869 3.21344C4.99444 3.32234 4.75991 3.29272 4.60859 3.14141L4.11834 2.65112C3.90697 2.4395 3.5675 2.44441 3.36134 2.65091L2.65112 3.36109C2.44544 3.56653 2.43856 3.906 2.65094 4.11812L3.14141 4.60859C3.29272 4.75991 3.32234 4.99447 3.21344 5.17866C2.94866 5.62634 2.74866 6.10822 2.61894 6.61088C2.5655 6.81787 2.37881 6.96247 2.16506 6.96247H1.47294C1.17772 6.9625 0.9375 7.20269 0.9375 7.49791V8.50209C0.9375 8.79731 1.17772 9.0375 1.47294 9.0375H2.16503C2.37881 9.0375 2.56547 9.18213 2.61891 9.38909C2.74863 9.89175 2.94866 10.3736 3.21341 10.8213C3.32231 11.0055 3.29269 11.2401 3.14138 11.3914L2.65109 11.8817C2.43916 12.0933 2.44469 12.4327 2.65091 12.6387L3.36106 13.3488C3.56691 13.555 3.90641 13.561 4.11809 13.349L4.60853 12.8586C4.72003 12.7471 4.952 12.6525 5.17866 12.7866Z\"\n          fill=\"currentColor\"\n        />\n        <path\n          d=\"M8.00005 11.4812C6.08045 11.4812 4.5188 9.91949 4.5188 7.99993C4.5188 6.08036 6.08045 4.51868 8.00005 4.51868C9.91964 4.51868 11.4813 6.08036 11.4813 7.99993C11.4813 9.91949 9.91964 11.4812 8.00005 11.4812ZM8.00005 5.45618C6.59739 5.45618 5.4563 6.5973 5.4563 7.99993C5.4563 9.40255 6.59742 10.5437 8.00005 10.5437C9.40267 10.5437 10.5438 9.40255 10.5438 7.99993C10.5438 6.5973 9.4027 5.45618 8.00005 5.45618Z\"\n          fill=\"currentColor\"\n        />\n      </g>\n      <defs>\n        <clipPath id=\"clip0\">\n          <rect width=\"16\" height=\"16\" fill=\"white\" />\n        </clipPath>\n      </defs>\n    </SvgIcon>\n  );\n};\n\nexport default SettingIcon;\n","import { Box, Button, Card, Grid, styled, useTheme } from \"@mui/material\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { H3 } from \"../../components/Typography\";\r\nimport convertToSlug from \"../../app/utils/convertSlug\";\r\nimport FlexBox from \"../../components/FlexBox\";\r\nimport PasswordIcon from \"../../icons/PasswordIcon\";\r\nimport ProfileIcon from \"../../icons/ProfileIcon\";\r\nimport UserInfo from \"./tabs/UserInfo/UserInfo\";\r\nimport Preferences from \"./tabs/Preferences\";\r\nimport Password from \"./tabs/Password\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport SettingIcon from \"../../icons/SettingIcon\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport queryString from \"query-string\";\r\n\r\n\r\nconst StyledButton = styled(Button)(() => ({\r\n  fontSize: 12,\r\n  borderRadius: 0,\r\n  marginTop: \"0.4rem\",\r\n  position: \"relative\",\r\n  justifyContent: \"flex-start\",\r\n}));\r\n\r\nconst AccountSettings: FC = () => {\r\n  const { commonStore } = useStore();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    commonStore.setTitle(\"Profile\");\r\n  }, [])\r\n\r\n  const theme = useTheme();\r\n  const [active, setActive] = useState(\"user-info\");\r\n\r\n  React.useEffect(() => {\r\n    if (!location.search) return\r\n    const parsedQuery = queryString.parse(location.search)\r\n    if (!parsedQuery.tab) return\r\n    setActive(parsedQuery.tab as string);\r\n  }, [location])\r\n\r\n  const style = {\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.secondary.light\r\n        : theme.palette.divider,\r\n    color: theme.palette.primary.main,\r\n    \"&::before\": {\r\n      width: 4,\r\n      right: 0,\r\n      content: '\"\"',\r\n      height: \"100%\",\r\n      position: \"absolute\",\r\n      backgroundColor: theme.palette.primary.main,\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box pt={2} pb={4}>\r\n      <Grid container spacing={{xs: 2, lg: 3}}>\r\n        <Grid item xs={12} lg={2} >\r\n          <Card sx={{ padding: \"1.5rem 0\" }}>\r\n            <H3 mb=\"0.5rem\" pl=\"1.5rem\">\r\n              User Profile\r\n            </H3>\r\n\r\n            {/* Side Menu */}\r\n            <FlexBox\r\n              flexDirection=\"column\"\r\n            >\r\n              {tabList.map(({ id, name, Icon }) => (\r\n                <StyledButton\r\n                  key={id}\r\n                  startIcon={<Icon sx={{ color: \"text.disabled\" }} />}\r\n                  onClick={() => {\r\n                    setActive(convertToSlug(name));\r\n                    history.push(\"/profile?tab=\" + convertToSlug(name));\r\n                  }}\r\n                  sx={\r\n                    active === convertToSlug(name)\r\n                      ? style\r\n                      : { \"&:hover\": style }\r\n                  }\r\n                >\r\n                  {name}\r\n                </StyledButton>\r\n              ))}\r\n            </FlexBox>\r\n          </Card>\r\n        </Grid>\r\n\r\n        {/* Tab Content */}\r\n        <Grid item xs={12} lg={7} >\r\n          {active === convertToSlug(tabList[0].name) && <UserInfo />}\r\n          {active === convertToSlug(tabList[1].name) && <Preferences />}\r\n          {active === convertToSlug(tabList[2].name) && <Password />}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst tabList = [\r\n  {\r\n    id: 1,\r\n    name: \"User Info\",\r\n    Icon: ProfileIcon,\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Preferences\",\r\n    Icon: SettingIcon,\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Change Password\",\r\n    Icon: PasswordIcon,\r\n  }\r\n];\r\n\r\n\r\nexport default AccountSettings;\r\n"],"names":["validationOptions","length","RegExp","lowerCase","upperCase","number","specialCharacter","password","options","calculatedStrength","passedFor","raiseStrengthBy","checkFor","toFixed","forEach","option","test","push","parseFloat","strength","StyledFormControlLabel","styled","FormControlLabel","fontWeight","StyledTextField","TextField","theme","color","palette","text","primary","borderRadius","border","borderColor","mode","secondary","divider","LightTextField","props","StyledSelectInput","InputBase","height","fontSize","width","padding","boxShadow","paddingRight","PaginationSelectInput","marginRight","spacing","position","backgroundColor","background","paper","transition","transitions","create","fontFamily","join","main","toLowerCase","replace","SvgIcon","xmlns","viewBox","d","fill","file","Promise","res","rej","reader","FileReader","onload","e","target","result","onerror","readAsDataURL","StyledSmall","Small","display","cursor","light","anchorRef","useRef","useState","open","setOpen","handlePopoverClose","Fragment","IconButton","size","onClick","ref","CameraAlt","sx","maxWidth","minWidth","popoverOpen","popoverClose","noHeader","Box","pt","htmlFor","onChange","evt","handleImageUpdate","name","type","accept","id","style","handleImageRemove","observer","useStore","currentUserStore","currentUser","updateCurrentUser","getCurrentUser","isUpdating","setIsUpdating","imageUrl","tempImage","setTempImage","firstName","lastName","phoneNumber","email","imageFile","undefined","deleteCurrentImage","userFormValues","setUserFormValues","fieldValidationSchema","Yup","shape","min","required","useFormik","initialValues","validationSchema","enableReinitialize","onSubmit","values","toast","resetForm","errors","touched","handleChange","handleSubmit","handleBlur","isSubmitting","isValid","dirty","setFieldValue","handleImageUpload","files","getBase64","base64","StyledBadge","Badge","Card","pb","H5","FlexBox","my","flexWrap","alignItems","justifyContent","overlap","anchorOrigin","vertical","horizontal","badgeContent","NanoAvatar","alt","src","ml","textTransform","roleId","Grid","container","mt","item","xs","sm","fullWidth","label","value","onBlur","helperText","error","Boolean","LoadingButton","variant","disabled","loading","Label","title","body","H6","updatePreferences","darkModeDefault","pageSizeDefault","preferencesFormValues","setPreferencesFormValues","mb","gap","Select","IconComponent","KeyboardArrowDown","input","map","MenuItem","control","Switch","checked","changePassword","commonStore","setStrength","newPassword","confirmNewPassword","passwordFormValues","oneOf","succeeded","columnSpacing","md","passwordStrength","checkPasswordStrength","placeholder","LinearProgress","paddingTop","clipPath","StyledButton","Button","marginTop","tabList","Icon","ProfileIcon","SettingIcon","PasswordIcon","location","useLocation","history","useHistory","useEffect","setTitle","useTheme","active","setActive","React","search","parsedQuery","queryString","tab","right","content","lg","H3","pl","flexDirection","startIcon","convertToSlug"],"sourceRoot":""}