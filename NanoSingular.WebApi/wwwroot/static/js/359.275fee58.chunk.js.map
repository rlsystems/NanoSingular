{"version":3,"file":"static/js/359.275fee58.chunk.js","mappings":"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","sources":["app/hooks/usePaginationMetaData.ts","components/EditIconButton.tsx","components/StyledModalCard.tsx","components/dataTables/DataTable.styled.tsx","components/dataTables/reactTable/GlobalFilter.tsx","components/dataTables/reactTable/ReactTable.tsx","components/formInput/InputsDark.tsx","components/formInput/InputsLight.tsx","icons/SearchIcon.tsx","components/formInput/SearchInput.tsx","icons/PencilIcon.tsx","pages/tenants/EditTenantModal.tsx","pages/tenants/TenantColumnShape.tsx","pages/tenants/RegisterTenantModal.tsx","pages/tenants/TenantList.tsx"],"sourcesContent":["import React from 'react'\r\n\r\nexport const paginationInitialState = {\r\n  queryPageIndex: 0,\r\n  queryPageSize: 10,\r\n  totalPageCount: 0,\r\n};\r\n\r\n// pagination settings\r\n// mobx stores are global/singleton. This is like a transient or scoped pagination object that server tables can use\r\n\r\nexport type PaginationStateType = typeof paginationInitialState;\r\nexport type PaginationDispatchType = React.Dispatch<{\r\n      type: ReducerType,\r\n      payload: number\r\n    }>\r\n\r\nexport const PAGE_CHANGED = 'PAGE_CHANGED';\r\nexport const PAGE_SIZE_CHANGED = 'PAGE_SIZE_CHANGED';\r\nexport const TOTAL_PAGE_COUNT_CHANGED = 'TOTAL_PAGE_COUNT_CHANGED';\r\n\r\nexport type ReducerType = 'PAGE_CHANGED' | 'PAGE_SIZE_CHANGED' | 'TOTAL_PAGE_COUNT_CHANGED'\r\n\r\nconst reducer = (state: PaginationStateType, { type, payload }: {\r\n    type: ReducerType,\r\n    payload: any\r\n  }) => {\r\n  switch (type) {\r\n    case PAGE_CHANGED:\r\n      return {\r\n        ...state,\r\n        queryPageIndex: payload,\r\n      };\r\n    case PAGE_SIZE_CHANGED:\r\n      return {\r\n        ...state,\r\n        queryPageSize: payload,\r\n      };\r\n    case TOTAL_PAGE_COUNT_CHANGED:\r\n      return {\r\n        ...state,\r\n        totalPageCount: payload,\r\n      };\r\n    default:\r\n      throw new Error(`Unhandled action type: ${type}`);\r\n  }\r\n};\r\n\r\nconst usePaginationMetaData = (pageSizeDefault: number = 10): [PaginationStateType, PaginationDispatchType] => {\r\n  return (\r\n    React.useReducer(reducer, {...paginationInitialState, queryPageSize: pageSizeDefault}) // reducer hook\r\n  )\r\n}\r\n\r\nexport default usePaginationMetaData","import { IconButton, IconButtonProps, useTheme } from \"@mui/material\";\nimport PencilIcon from \"../icons/PencilIcon\";\n\nconst EditIconButton = (props: IconButtonProps) => {\n  const theme = useTheme();\n\n  return (\n    <IconButton\n      {...props}\n      sx={{\n        border: \"1px solid\",\n        borderRadius: \"10px\",\n        borderColor:\n          theme.palette.mode === \"light\" ? \"secondary.300\" : \"divider\",\n      }}\n    >\n      <PencilIcon\n        sx={{\n          fontSize: 16,\n          color: \"text.disabled\",\n        }}\n      />\n    </IconButton>\n  );\n};\n\nexport default EditIconButton;\n","import { Card, styled } from \"@mui/material\";\r\n\r\n\r\nconst StyledModalCard = styled(Card)(({ theme }) => ({\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    maxWidth: 700,\r\n    minWidth: 300,\r\n    position: \"absolute\",\r\n    padding: \"1.5rem\",\r\n    boxShadow: theme.shadows[2],\r\n    transform: \"translate(-50%, -50%)\",\r\n    width: \"100%\",\r\n    outline: \"none\",\r\n    [theme.breakpoints.down(\"md\")]: { width: \"95%\" },\r\n}));\r\n\r\n\r\nexport default StyledModalCard;\r\n","import { alpha, Pagination, styled as muiStyled, TableRow, TableCell } from \"@mui/material\";\r\nimport styled from \"@emotion/styled\";\r\n\r\n// Shared styles for both Server Table and React Table\r\nexport const StyledTableHeaderCell = styled(TableCell, {shouldForwardProp: prop => prop !== 'column'})<{column: any}>`\r\n  padding-top: 0;\r\n  padding-bottom: 0;\r\n  font-size: ${({theme}) => theme.typography.pxToRem(13)};\r\n  font-weight: 600;\r\n  border-bottom: 0;\r\n  color: ${({theme}) => theme.palette.text.disabled};\r\n  width: ${p => p.column.width};\r\n  min-width: ${p => p.column.minWidth};\r\n  max-width: ${p => p.column.maxWidth};\r\n\r\n  &:last-child {\r\n    text-align: center;\r\n  }\r\n`\r\n\r\nexport const StyledTableRow = styled(TableRow, { shouldForwardProp: p => p !== 'rowClick' })<{rowClick?: boolean}>`\r\n  background-color: ${({theme}) => theme.palette.background.paper};\r\n  cursor: ${p => p.rowClick ? \"pointer\" : \"unset\"};\r\n\r\n  & td:first-of-type {\r\n    border-left: 1px solid;\r\n    border-top-left-radius: 8px;\r\n    border-bottom-left-radius: 8px;\r\n    border-color: ${({theme}) =>\r\n      theme.palette.mode === 'light' ?\r\n      theme.palette.text.secondary :\r\n      theme.palette.divider};\r\n  }\r\n\r\n  & td:last-of-type {\r\n    text-align: center;\r\n    border-right: 1px solid;\r\n    border-top-right-radius: 8px;\r\n    border-bottom-right-radius: 8px;\r\n    border-color: ${({theme}) =>\r\n      theme.palette.mode === 'light' ?\r\n      theme.palette.text.secondary :\r\n      theme.palette.divider};\r\n  }\r\n\r\n  &:last-of-type .MuiTableCell-root {\r\n    border-bottom:\r\n      ${({theme}) => theme.palette.mode === \"dark\"\r\n        ? `1px solid ${theme.palette.divider} !important`\r\n        : `1px solid ${theme.palette.text.secondary} !important`};\r\n  }\r\n`\r\n\r\nexport const StyledTableRowCell = styled(TableCell)`\r\n  font-size: ${({theme}) => theme.typography.pxToRem(13)};\r\n  font-weight: 500;\r\n  color: ${({theme}) => theme.palette.text.disabled};\r\n  border-top: 1px solid;\r\n  border-bottom: 1px solid;\r\n  border-color: ${({theme}) =>\r\n      theme.palette.mode === 'light' ?\r\n      theme.palette.text.secondary :\r\n      theme.palette.divider};\r\n`\r\n\r\nexport const StyledTableBodyRow = muiStyled(TableRow)<{\r\n  selected_row: string;\r\n}>(({ theme, selected_row }) =>\r\n  selected_row === \"select\"\r\n    ? {\r\n        backgroundColor: alpha(theme.palette.primary.light, 0.5),\r\n        position: \"relative\",\r\n        \"&::after\": {\r\n          top: 0,\r\n          left: 0,\r\n          width: \"3px\",\r\n          content: '\"\"',\r\n          height: \"100%\",\r\n          position: \"absolute\",\r\n          backgroundColor: theme.palette.primary.main,\r\n        },\r\n      }\r\n    : {}\r\n);\r\n\r\nexport const StyledPagination = muiStyled(Pagination)(({ theme }) => ({\r\n  \"& .MuiPaginationItem-root\": {\r\n    fontSize: 12,\r\n    fontWeight: 500,\r\n    color: theme.palette.text.disabled,\r\n  },\r\n  \"& .MuiPaginationItem-page:hover\": {\r\n    borderRadius: 20,\r\n    backgroundColor: \"transparent\",\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n  },\r\n  \"& .MuiPaginationItem-page.Mui-selected\": {\r\n    borderRadius: 20,\r\n    backgroundColor: \"transparent\",\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n  },\r\n  \"& .MuiPaginationItem-previousNext\": {\r\n    margin: 10,\r\n    borderRadius: 20,\r\n    color: theme.palette.primary.main,\r\n    border: `1px solid ${theme.palette.primary.main}`,\r\n    \"&:hover\": { backgroundColor: \"transparent\" },\r\n  },\r\n}));\r\n\r\n","import React from \"react\";\r\nimport { useAsyncDebounce, UseGlobalFiltersInstanceProps, UseGlobalFiltersState } from \"react-table\"\r\n\r\nimport SearchInput from \"components/formInput/SearchInput\";\r\nimport { InputProps } from \"@mui/material\";\r\n\r\nexport interface GlobalFilterProps {\r\n  preGlobalFilteredRows: UseGlobalFiltersInstanceProps<any>['preGlobalFilteredRows'];\r\n  globalFilter: UseGlobalFiltersState<any>['globalFilter'];\r\n  setGlobalFilter: UseGlobalFiltersInstanceProps<any>['setGlobalFilter'];\r\n  inputProps?: InputProps\r\n}\r\n\r\n\r\nconst GlobalFilter: React.FC<GlobalFilterProps> = ({\r\n  globalFilter,\r\n  setGlobalFilter,\r\n  inputProps\r\n}) => {\r\n  const [value, setValue] = React.useState(globalFilter)\r\n  const onChange = useAsyncDebounce(value => { \r\n    setGlobalFilter(value || undefined)\r\n  }, 200) // 200 is the delay for the user input\r\n  \r\n  return (\r\n    <SearchInput\r\n      value={value || ''}\r\n      onChange={e => {\r\n        setValue(e.target.value);\r\n        onChange(e.target.value);\r\n      }}\r\n      {...inputProps}\r\n    />\r\n  )\r\n}\r\n\r\nexport default GlobalFilter","import { FC } from \"react\";\r\nimport {\r\n  Box,\r\n  ButtonBase,\r\n  CircularProgress,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n  Stack,\r\n  Table,\r\n  TableBody,\r\n  TableHead,\r\n  TableRow,\r\n\r\n} from \"@mui/material\";\r\nimport { ArrowRightAlt } from \"@mui/icons-material\";\r\nimport {\r\n  TableBodyProps,\r\n  TableProps,\r\n} from \"react-table\";\r\nimport ScrollBar from \"simplebar-react\";\r\n\r\nimport { PaginationSelectInput } from \"components/formInput/InputsLight\";\r\nimport FlexBox from \"components/FlexBox\";\r\nimport { H6, H5 } from \"components/Typography\";\r\nimport { StyledTableHeaderCell, StyledTableRow, StyledTableRowCell, StyledPagination } from \"components/dataTables/DataTable.styled\";\r\n\r\ninterface ReactTableProps {\r\n  getTableProps: () => TableProps,\r\n  getTableBodyProps: () => TableBodyProps,\r\n  headerGroups: any[],\r\n  prepareRow: any,\r\n  page: any[],\r\n  pageOptions: any,\r\n  pageIndex: number,\r\n  pageSize: number,\r\n  setPageSize: (pageSize: number) => void,\r\n  gotoPage: any,\r\n  rowClick?: (rowData: object) => void;\r\n  hidePagination?: boolean;\r\n  showFooter?: boolean;\r\n  isLoading?: boolean;\r\n}\r\n\r\nconst ReactTable: FC<ReactTableProps> = (props) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    pageIndex,\r\n    pageSize,\r\n    setPageSize,\r\n    gotoPage,\r\n    rowClick,\r\n    showFooter,\r\n    hidePagination,\r\n    isLoading\r\n  } = props;\r\n\r\n  const handleChangePage = (_: any, newPage: number) => {\r\n    gotoPage(newPage - 1)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = (event: SelectChangeEvent<number>) => {\r\n    setPageSize(Number(event.target.value))\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <ScrollBar>\r\n        <Table\r\n          {...getTableProps()}\r\n          sx={{\r\n            borderSpacing: \"0 1rem\",\r\n            borderCollapse: \"separate\",\r\n          }}\r\n        >\r\n          <TableHead>\r\n            {headerGroups.map((headerGroup: any) => (\r\n              <TableRow {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map((column: any) => (\r\n                  <StyledTableHeaderCell\r\n                    {...column.getHeaderProps(column.getSortByToggleProps())}\r\n                    column={column}\r\n                    sx={{minWidth: column.minWidth}}\r\n                  >\r\n                    <H6 color=\"text.primary\" sx={{opacity: .7}} >{column.render(\"Header\")}</H6>\r\n                  </StyledTableHeaderCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableHead>\r\n\r\n          {!isLoading &&\r\n            <TableBody {...getTableBodyProps()}>\r\n            {page.map((row: any) => {\r\n              prepareRow(row);\r\n\r\n              return (\r\n                <StyledTableRow\r\n                  {...row.getRowProps()}\r\n                  onClick={rowClick && rowClick(row.original)}\r\n                  rowClick={Boolean(rowClick)}\r\n                >\r\n                  {row.cells.map((cell: any) => (\r\n                    <StyledTableRowCell {...cell.getCellProps()}>\r\n                      {cell.render(\"Cell\")}\r\n                    </StyledTableRowCell>\r\n                  ))}\r\n                </StyledTableRow>\r\n              );\r\n            })}\r\n          </TableBody>}\r\n        </Table>\r\n        {isLoading && (<Box my={6} width=\"100%\" display=\"flex\" justifyContent=\"center\">\r\n              <CircularProgress />\r\n        </Box>)}\r\n      </ScrollBar>\r\n\r\n      {!hidePagination && (\r\n        <Stack alignItems={{xs: \"flex-end\", sm: \"center\"}} spacing={{xs: 1, sm: 0}} justifyContent={{xs: \"flex-start\", sm: \"flex-end\"}} marginY={1} direction={{xs: \"column-reverse\", sm: \"row\"}}>\r\n          <Select\r\n            value={pageSize}\r\n            onChange={handleChangeRowsPerPage}\r\n            input={<PaginationSelectInput />}\r\n          >\r\n            {[5, 10, 15, 20, 25, 50].map(option =>\r\n                <MenuItem key={option} value={option}>\r\n                  {option}\r\n                </MenuItem>\r\n            )}\r\n          </Select>\r\n          <StyledPagination\r\n            count={pageOptions.length}\r\n            shape=\"rounded\"\r\n            onChange={handleChangePage}\r\n            page={pageIndex + 1}\r\n          />\r\n        </Stack>\r\n      )}\r\n\r\n      {showFooter && (\r\n        <FlexBox alignItems=\"center\" justifyContent=\"space-between\">\r\n          <H5 color=\"text.disabled\">Showing 1-12 of 24 result</H5>\r\n          <ButtonBase\r\n            disableRipple\r\n            sx={{\r\n              fontSize: 14,\r\n              fontWeight: 600,\r\n            }}\r\n          >\r\n            See All\r\n            <ArrowRightAlt sx={{ marginLeft: 0.5 }} />\r\n          </ButtonBase>\r\n        </FlexBox>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ReactTable;\r\n","import { InputBase, MenuItem, styled, TextField, TextFieldProps } from \"@mui/material\";\r\nimport { FC } from \"react\";\r\n\r\n// Text Inputs\r\nconst StyledDarkTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\r\n  \"&:hover, & .MuiOutlinedInput-root:hover\": {\r\n    \"& .MuiOutlinedInput-notchedOutline\": {\r\n      borderColor: theme.palette.primary.main,\r\n    },\r\n  },\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontSize: 12,\r\n    minHeight: 35,\r\n    fontWeight: 500,\r\n    borderRadius: \"8px\",\r\n    padding: \"0px 1rem\",\r\n    color: theme.palette.text.primary,\r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    borderColor: \"transparent\",\r\n    borderWidth: \"1px !important\",\r\n  },\r\n  \"& .MuiInputBase-root\": {\r\n    backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.text.secondary\r\n        : theme.palette.divider,\r\n  },\r\n}));\r\n\r\nexport const DarkTextField: FC<TextFieldProps> = (props) => {\r\n  return <StyledDarkTextField {...props} fullWidth />;\r\n};\r\n\r\n\r\n// Select Input (Dropdown)\r\nexport const DarkMenuItem = styled(MenuItem)(({ theme }) => ({\r\n  fontSize: 12,\r\n  fontWeight: 500,\r\n  color: theme.palette.text.disabled,\r\n}));\r\n \r\nexport const DarkStyledSelectInput = styled(InputBase)(({ theme }) => ({\r\n  height: 35,\r\n  fontSize: 12,\r\n  padding: \"0 1rem\",\r\n  borderRadius: \"8px\",\r\n  color: theme.palette.text.primary,\r\n  backgroundColor:\r\n      theme.palette.mode === \"light\"\r\n          ? theme.palette.secondary[300]\r\n          : theme.palette.divider,\r\n  \"& .MuiSvgIcon-root\": { color: theme.palette.text.disabled },\r\n}));","import { InputBase, styled, TextField, TextFieldProps } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\n// text input\r\nconst StyledTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\r\n  \"& .MuiOutlinedInput-input\": {\r\n    fontWeight: 500,\r\n    color: theme.palette.text.primary,\r\n  },\r\n  \"& .MuiOutlinedInput-notchedOutline\": {\r\n    borderRadius: \"8px\",\r\n    border: \"2px solid\",\r\n    borderColor:\r\n      theme.palette.mode === \"light\"\r\n        ? theme.palette.secondary[300]\r\n        : theme.palette.divider,\r\n  },\r\n  \"& .MuiOutlinedInput-root.Mui-disabled .MuiOutlinedInput-notchedOutline\": {\r\n    borderColor: theme.palette.secondary[300],\r\n  },\r\n}));\r\n\r\nexport const LightTextField = (props: TextFieldProps) => {\r\n  return <StyledTextField {...props} />;\r\n};\r\n\r\n\r\n// select input (dropdown)\r\nexport const StyledSelectInput = styled(InputBase)(({ theme }) => ({\r\n  height: 50,\r\n  fontSize: 12,\r\n  width: \"100%\",\r\n  fontWeight: 600,\r\n  padding: \"0 8px\",\r\n  border: \"2px solid\",\r\n  borderRadius: \"8px\",\r\n  color: theme.palette.text.primary,\r\n  borderColor:\r\n    theme.palette.mode === \"light\"\r\n      ? theme.palette.secondary[300]\r\n      : theme.palette.divider,\r\n  \"& .MuiPopover-paper\": { boxShadow: \"none\" },\r\n  \"& > .MuiSelect-select\": { paddingRight: \"0 !important\" },\r\n}));\r\n\r\n\r\n// pagination select dropdown\r\nexport const PaginationSelectInput = styled(InputBase)(({ theme }) => ({\r\n  marginRight: theme.spacing(2),\r\n  '& .MuiInputBase-input': {\r\n    borderRadius: 4,\r\n    position: 'relative',\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: '1px solid rgba(36, 153, 239, 0.5)',\r\n    fontSize: 12,\r\n    fontWeight: 500,\r\n    padding: '10px 26px 10px 12px',\r\n    transition: theme.transitions.create(['border-color', 'box-shadow']),\r\n    fontFamily: [\r\n      '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      '\"Segoe UI\"',\r\n      'Roboto',\r\n      '\"Helvetica Neue\"',\r\n      'Arial',\r\n      'sans-serif',\r\n      '\"Apple Color Emoji\"',\r\n      '\"Segoe UI Emoji\"',\r\n      '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n    '&:focus': {\r\n      borderRadius: 4,\r\n      borderColor: theme.palette.primary.main,\r\n      boxShadow: '0 0 0 0.2rem rgba(36, 153, 239, 0.25)',\r\n    },\r\n  },\r\n}));","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst SearchIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon viewBox=\"0 0 20 20\" {...props}>\n      <path\n        d=\"M8.80758 0C3.95121 0 0 3.95121 0 8.80758C0 13.6642 3.95121 17.6152 8.80758 17.6152C13.6642 17.6152 17.6152 13.6642 17.6152 8.80758C17.6152 3.95121 13.6642 0 8.80758 0ZM8.80758 15.9892C4.84769 15.9892 1.62602 12.7675 1.62602 8.80762C1.62602 4.84773 4.84769 1.62602 8.80758 1.62602C12.7675 1.62602 15.9891 4.84769 15.9891 8.80758C15.9891 12.7675 12.7675 15.9892 8.80758 15.9892Z\"\n        fill=\"currentColor\"\n      />\n      <path\n        d=\"M19.7617 18.6124L15.1005 13.9511C14.7829 13.6335 14.2685 13.6335 13.9509 13.9511C13.6332 14.2684 13.6332 14.7834 13.9509 15.1007L18.6121 19.762C18.7709 19.9208 18.9788 20.0002 19.1869 20.0002C19.3948 20.0002 19.6029 19.9208 19.7617 19.762C20.0794 19.4446 20.0794 18.9297 19.7617 18.6124Z\"\n        fill=\"currentColor\"\n      />\n    </SvgIcon>\n  );\n};\n\nexport default SearchIcon;\n","import { InputBase, InputBaseProps, styled } from \"@mui/material\";\nimport SearchIcon from \"../../icons/SearchIcon\";\nimport { FC } from \"react\";\n\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({ \n  height: 45,\n  fontSize: 13,\n  width: \"100%\",\n  maxWidth: 270,\n  fontWeight: 500,\n  padding: \"0 1rem\",\n  borderRadius: \"8px\",\n  border: \"1px solid \",\n  borderColor:\n    theme.palette.mode === \"light\"\n      ? theme.palette.secondary[300]\n      : theme.palette.divider,\n\n  color: theme.palette.text.primary,\n  backgroundColor: theme.palette.background.paper,\n  [theme.breakpoints.down(500)]: { maxWidth: \"100%\" },\n}));\n\nconst SearchInput: FC<InputBaseProps> = (props) => {\n  return (\n    <StyledInputBase\n      {...props} \n      startAdornment={ // start input with icon\n        <SearchIcon\n          sx={{\n            fontSize: 16,\n            marginRight: 1,\n            color: \"text.disabled\",\n          }}\n        />\n      }\n    />\n  );\n};\n\nexport default SearchInput;\n","import { SvgIcon, SvgIconProps } from \"@mui/material\";\n\nconst PencilIcon = (props: SvgIconProps) => {\n  return (\n    <SvgIcon viewBox=\"0 0 12 12\" {...props}>\n      <path\n        d=\"M10.6221 0.48305C9.97692 -0.161017 8.93219 -0.161017 8.28705 0.48305L7.70255 1.07081L1.48058 7.29007L1.46735 7.3034C1.46415 7.3066 1.46415 7.31001 1.46074 7.31001C1.45413 7.31993 1.44421 7.32974 1.43771 7.33966C1.43771 7.34297 1.4343 7.34297 1.4343 7.34627C1.42769 7.35619 1.42448 7.3628 1.41777 7.37272C1.41457 7.37603 1.41457 7.37923 1.41126 7.38264C1.40795 7.39256 1.40465 7.39917 1.40124 7.40909C1.40124 7.41229 1.39804 7.41229 1.39804 7.4157L0.0175678 11.5673C-0.0229278 11.6855 0.00785715 11.8164 0.096803 11.9041C0.159303 11.9658 0.2436 12.0003 0.331306 12C0.367153 11.9994 0.40269 11.9938 0.436987 11.9835L4.585 10.5996C4.58821 10.5996 4.58821 10.5996 4.59162 10.5964C4.60205 10.5933 4.61207 10.5888 4.62126 10.583C4.62385 10.5827 4.62612 10.5816 4.62798 10.5798C4.63779 10.5732 4.65102 10.5665 4.66093 10.5599C4.67075 10.5534 4.68077 10.5435 4.69069 10.5368C4.69399 10.5334 4.69719 10.5334 4.69719 10.5302C4.7006 10.5269 4.70721 10.5237 4.71052 10.517L11.517 3.70989C12.161 3.06469 12.161 2.01986 11.517 1.37476L10.6221 0.48305ZM4.47932 9.82336L2.18078 7.5247L7.93375 1.77118L10.2323 4.06984L4.47932 9.82336ZM1.85702 8.1357L3.86507 10.1438L0.849795 11.1479L1.85702 8.1357ZM11.0514 3.24745L10.7013 3.60089L8.40265 1.30203L8.75616 0.948691C9.14283 0.562292 9.76959 0.562292 10.1564 0.948691L11.0546 1.84702C11.4384 2.23548 11.4369 2.86085 11.0514 3.24745Z\"\n        fill=\"currentColor\"\n      />\n    </SvgIcon>\n  );\n};\n\nexport default PencilIcon;\n","import {\r\n    Button,\r\n    Checkbox,\r\n    Divider,\r\n    FormControlLabel,\r\n    FormGroup,\r\n    Grid,\r\n    Modal,\r\n} from \"@mui/material\";\r\nimport {DarkTextField} from \"../../components/formInput/InputsDark\";\r\nimport FlexBox from \"../../components/FlexBox\";\r\nimport { H2, H6 } from \"../../components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport { FC, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { Tenant } from \"../../app/models/tenant\";\r\nimport StyledModalCard from \"components/StyledModalCard\";\r\nimport { toast } from \"material-react-toastify\";\r\n\r\n\r\ninterface ModalProps {\r\n    data?: any;\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst EditTenantModal: FC<ModalProps> = ({ open, onClose, data }) => {\r\n    const { tenantStore } = useStore();\r\n    const { updateTenant, loading } = tenantStore;\r\n\r\n    const [tenantFormValues] = useState<Tenant>({ // local state\r\n        id: data.id,\r\n        name: data.name,\r\n        isActive: data.isActive,\r\n        createdOn: data.createdOn\r\n    });\r\n\r\n    const handleClose = () => {\r\n        resetForm(); // method from Formik\r\n        onClose(); // method from Mui Modal\r\n    }\r\n\r\n    // validation schema - passed to formik\r\n    const validationSchema = Yup.object({\r\n        name: Yup.string().required('Tenant name is required'),\r\n    })\r\n\r\n    const { values, errors, handleChange, handleSubmit, touched, handleBlur, dirty, isSubmitting, isValid, resetForm } = useFormik({\r\n        initialValues: tenantFormValues,\r\n        validationSchema: validationSchema,\r\n        enableReinitialize: true,\r\n        onSubmit: async (tenant: Tenant, { resetForm }) => {\r\n            const response = await updateTenant(tenant)\r\n            if (!response) return\r\n            onClose()\r\n            resetForm()\r\n            toast.dark('Tenant created successfully')\r\n        }\r\n    });\r\n\r\n    return (\r\n        <Modal open={open} onClose={handleClose}>\r\n            <StyledModalCard>\r\n                <H2 mb={2}>Edit Tenant</H2>\r\n                <Divider />\r\n                <form onSubmit={handleSubmit}>\r\n                    <Grid mt={1} container spacing={3} columnSpacing={5} className=\"main-form\">\r\n                        <Grid item xs={7}>\r\n                            <H6 mb={1}>Name</H6>\r\n                            <DarkTextField\r\n                                id=\"name\"\r\n                                name=\"name\"\r\n                                placeholder=\"Name\"\r\n                                value={values.name}\r\n                                onChange={handleChange}\r\n                                onBlur={handleBlur}\r\n                                error={touched.name && Boolean(errors.name)}\r\n                                helperText={touched.name && errors.name}\r\n                            />\r\n                        </Grid>\r\n\r\n                        <Grid item xs={7}>\r\n                            <FormGroup>\r\n                                <FormControlLabel control={\r\n                                    <Checkbox\r\n                                        id=\"isActive\"\r\n                                        name=\"isActive\"\r\n                                        checked={values.isActive}\r\n                                        value={values.isActive}\r\n                                        onChange={handleChange}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                } label=\"Is Active\" />\r\n                            </FormGroup>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <FlexBox justifyContent=\"flex-end\" marginTop={4}>\r\n                        <Button\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            variant=\"outlined\"\r\n                            onClick={onClose}\r\n                            sx={{\r\n                                width: 124,\r\n                                fontSize: 12,\r\n                                marginRight: 2,\r\n                                color: \"text.disabled\",\r\n                                borderColor: \"text.disabled\",\r\n                            }}\r\n                        >\r\n                            Cancel\r\n                        </Button>\r\n                        <LoadingButton\r\n                            fullWidth\r\n                            size=\"small\"\r\n                            type=\"submit\"\r\n                            variant=\"contained\"\r\n                            disabled={!dirty || !isValid || isSubmitting}\r\n                            loading={isSubmitting || loading}\r\n                            sx={{ width: 124, fontSize: 12 }}\r\n                        >\r\n                            Save\r\n                        </LoadingButton>\r\n                    </FlexBox>\r\n                </form>\r\n            </StyledModalCard>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default observer(EditTenantModal);\r\n","import { useState } from \"react\";\r\nimport { H6, Small } from \"components/Typography\";\r\nimport EditIconButton from \"components/EditIconButton\";\r\nimport EditTenantModal from \"./EditTenantModal\";\r\nimport { Box } from \"@mui/material\";\r\n\r\n// columns for the tenants table\r\nconst TenantColumnShape = [\r\n  {\r\n    Header: \"Key\",\r\n    accessor: \"id\",\r\n    minWidth: 150,\r\n    Cell: ({ row }: any) => {\r\n\r\n      const { id } = row.original;\r\n      return (\r\n        <H6 color=\"text.disabled\"\r\n        >{id} {id == \"root\" && <Small\r\n          sx={{\r\n            color: \"info.alternate\",\r\n          }}\r\n        >\r\n          (You)\r\n        </Small>}</H6>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    Header: \"Name\",\r\n    accessor: \"name\",\r\n    minWidth: 250,\r\n    Cell: ({ row }: any) => {\r\n      const { name } = row.original;\r\n      return (\r\n        <H6 color=\"text.primary\"\r\n          sx={{ textTransform: \"capitalize\" }}\r\n        >{name} </H6>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    Header: \"Active\",\r\n    accessor: \"isActive\",\r\n    minWidth: 150,\r\n    canFilter: false,\r\n    Cell: ({ value }: any) => (\r\n      <Small\r\n        sx={{\r\n          color: value.toString().toLowerCase() === \"true\" ? \"success.main\" : \"error.main\",\r\n          textTransform: \"capitalize\"\r\n        }}\r\n      >\r\n        {value.toString() === \"true\" ? \"Yes\" : \"No\"}\r\n      </Small>\r\n    ),\r\n  },\r\n\r\n  {\r\n    Header: \"Edit\",\r\n    accessor: \"action\",\r\n    Cell: ({ row }: any) => {\r\n      const [openModal, setOpenModal] = useState(false);\r\n      const { id } = row.original;\r\n\r\n      return (\r\n        <>\r\n          {id != \"root\" ?<EditIconButton onClick={() => setOpenModal(true)} /> : <Box display={'flex'} justifyContent={'center'} alignItems={'center'} sx={{ height: \"36px\" }}>N/A</Box>}\r\n          {openModal && <EditTenantModal\r\n            open={openModal}\r\n            data={row.original}\r\n            onClose={() => setOpenModal(false)}\r\n          />}\r\n        </>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\nexport default TenantColumnShape;\r\n","import {\r\n  Button,\r\n  Divider,\r\n  Grid,\r\n  Modal,\r\n} from \"@mui/material\";\r\nimport {DarkTextField} from \"../../components/formInput/InputsDark\";\r\nimport FlexBox from \"../../components/FlexBox\";\r\nimport { H2, H6 } from \"../../components/Typography\";\r\nimport { useFormik } from \"formik\";\r\nimport { FC, useState } from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { LoadingButton } from \"@mui/lab\";\r\nimport { CreateTenantRequest } from \"../../app/models/tenant\";\r\nimport StyledModalCard from \"components/StyledModalCard\";\r\nimport { toast } from \"material-react-toastify\";\r\n\r\ninterface ModalProps {\r\n  data?: any;\r\n  open: boolean;\r\n  onClose: () => void;\r\n}\r\n\r\nconst RegisterTenantModal: FC<ModalProps> = ({ open, onClose, data }) => {\r\n  const { tenantStore } = useStore();\r\n  const { createTenant, loading } = tenantStore;\r\n\r\n  const [tenantFormValues, setTenantFormValues] = useState<CreateTenantRequest>({ // Local State\r\n    id: '',\r\n    name: '',\r\n    adminEmail: '',\r\n    password: ''\r\n  });\r\n\r\n  const handleClose = () => {\r\n    resetForm(); // method from Formik\r\n    onClose(); // method from Mui Modal\r\n  }\r\n\r\n  //gets passed to formik\r\n  const validationSchema = Yup.object({\r\n    id: Yup.string().required('The key is required'),\r\n    name: Yup.string().required('Tenant name is required'),\r\n    adminEmail: Yup.string().required('The admin email is required').email(),\r\n    password: Yup.string().required('The password is required'),\r\n  })\r\n\r\n  const { values, errors, handleChange, handleSubmit, touched, handleBlur, dirty, isSubmitting, isValid, resetForm } = useFormik({\r\n    initialValues: tenantFormValues,\r\n    validationSchema: validationSchema,\r\n    enableReinitialize: true,\r\n    onSubmit: async (createTenantRequest: CreateTenantRequest, { resetForm }) => {\r\n      const response = await createTenant(createTenantRequest)\r\n      if (!response) return\r\n      resetForm()\r\n      onClose()\r\n      toast.dark('Tenant created successfully')\r\n    }\r\n  });\r\n\r\n  return (\r\n    <Modal open={open} onClose={handleClose}>\r\n      <StyledModalCard>\r\n        <H2 mb={2}>Add Tenant</H2>\r\n        <Divider />\r\n        <form onSubmit={handleSubmit}>\r\n          <Grid mt={1} container spacing={3} columnSpacing={5} className=\"main-form\">\r\n            <Grid item xs={6}>\r\n              <H6 mb={1}>Tenant Key</H6>\r\n              <DarkTextField\r\n                id=\"id\"\r\n                name=\"id\"\r\n                placeholder=\"Key\"\r\n                value={values.id}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.id && Boolean(errors.id)}\r\n                helperText={touched.id && errors.id}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <H6 mb={1}>Name</H6>\r\n              <DarkTextField\r\n                id=\"name\"\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                value={values.name}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.name && Boolean(errors.name)}\r\n                helperText={touched.name && errors.name}\r\n              />\r\n            </Grid>\r\n\r\n\r\n            <Grid item xs={6}>\r\n              <H6 mb={1}>Admin Email</H6>\r\n              <DarkTextField\r\n                id=\"adminEmail\"\r\n                name=\"adminEmail\"\r\n                placeholder=\"admin@email.com\"\r\n                value={values.adminEmail}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.adminEmail && Boolean(errors.adminEmail)}\r\n                helperText={touched.adminEmail && errors.adminEmail}\r\n              />\r\n            </Grid>\r\n\r\n            <Grid item xs={6}>\r\n              <H6 mb={1}>Password</H6>\r\n              <DarkTextField\r\n                id=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                type=\"password\"\r\n                value={values.password}\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                error={touched.password && Boolean(errors.password)}\r\n                helperText={touched.password && errors.password}\r\n              />\r\n            </Grid>\r\n\r\n\r\n          </Grid>\r\n\r\n          <FlexBox justifyContent=\"flex-end\" marginTop={4}>\r\n            <Button\r\n              fullWidth\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              onClick={onClose}\r\n              sx={{\r\n                width: 124,\r\n                fontSize: 12,\r\n                marginRight: 2,\r\n                color: \"text.disabled\",\r\n                borderColor: \"text.disabled\",\r\n              }}\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <LoadingButton\r\n              fullWidth\r\n              size=\"small\"\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              disabled={!dirty || !isValid || isSubmitting}\r\n              loading={isSubmitting || loading}\r\n              sx={{ width: 124, fontSize: 12 }}\r\n            >\r\n              Save\r\n            </LoadingButton>\r\n          </FlexBox>\r\n        </form>\r\n      </StyledModalCard>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(RegisterTenantModal);\r\n","import { FC, useEffect, useMemo, useState } from \"react\";\r\nimport { Box, Button, Grid, styled } from \"@mui/material\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Add } from \"@mui/icons-material\";\r\nimport { useExpanded, useFilters, useGlobalFilter, usePagination, useSortBy, useTable } from \"react-table\";\r\nimport { useStore } from 'app/stores/store';\r\nimport TenantColumnShape from \"./TenantColumnShape\";\r\nimport RegisterTenantModal from \"./RegisterTenantModal\";\r\nimport { Tenant } from \"app/models/tenant\";\r\nimport { paginationInitialState } from \"app/hooks/usePaginationMetaData\";\r\nimport { CustomTableOptions } from \"app/models/reactTable\";\r\nimport { H6 } from \"components/Typography\";\r\nimport ReactTable from \"components/dataTables/reactTable/ReactTable\";\r\nimport GlobalFilter from \"components/dataTables/reactTable/GlobalFilter\";\r\n\r\n// tenants list table, accessable to root admin only\r\nconst TenantList: FC = () => {\r\n  const { tenantStore, commonStore } = useStore();\r\n  const { loadTenants, tenantsSorted, loadingInitial } = tenantStore;\r\n  const { setTitle, pageSizeDefault } = commonStore;\r\n  const data: Tenant[] = useMemo(() => tenantsSorted, [tenantsSorted]);\r\n  const columns: any = useMemo(() => TenantColumnShape, [TenantColumnShape]);\r\n\r\n  const initialState = useMemo(() => ({\r\n    pageIndex: paginationInitialState.queryPageIndex,\r\n    pageSize: pageSizeDefault\r\n  }), [])\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    pageOptions,\r\n    setPageSize,\r\n    gotoPage,\r\n    preGlobalFilteredRows,\r\n    setGlobalFilter,\r\n    state,\r\n  }: any = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState\r\n    } as CustomTableOptions<Tenant>,\r\n    useFilters,\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    useExpanded,\r\n    usePagination\r\n  );\r\n\r\n  useEffect(() => {\r\n    setTitle(\"Tenants\");\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    loadTenants();\r\n  }, [loadTenants])\r\n\r\n  const [openModal, setOpenModal] = useState(false);\r\n\r\n  return (\r\n    <Box pt={2} pb={4}>\r\n      <Grid container spacing={2} mb={2}>\r\n        <Grid item xs={12} md={6}>\r\n          <GlobalFilter\r\n            preGlobalFilteredRows={preGlobalFilteredRows}\r\n            setGlobalFilter={setGlobalFilter}\r\n            globalFilter={state.globalFilter}\r\n            inputProps={{\r\n              placeholder: 'Search tenants...'\r\n            }}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6} display=\"flex\" justifyContent={{ xs: \"flex-start\", md: \"flex-end\" }} >\r\n          <Button\r\n            endIcon={<Add />}\r\n            variant=\"contained\"\r\n            onClick={() => setOpenModal(true)}>\r\n            Add Tenant\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <RegisterTenantModal\r\n        open={openModal}\r\n        data={null}\r\n        onClose={() => setOpenModal(false)}\r\n      />\r\n\r\n      <ReactTable\r\n        getTableProps={getTableProps}\r\n        getTableBodyProps={getTableBodyProps}\r\n        headerGroups={headerGroups}\r\n        prepareRow={prepareRow}\r\n        page={page}\r\n        pageOptions={pageOptions}\r\n        pageIndex={state.pageIndex}\r\n        pageSize={state.pageSize}\r\n        setPageSize={setPageSize}\r\n        gotoPage={gotoPage}\r\n        isLoading={loadingInitial}\r\n      />\r\n      <H6 sx={{fontSize: \"12px\", fontWeight: \"300\", color: \"#94A4C4\"}}>Demo Tip: To see multitenancy in action, try logging in as other tenants. Default password for all users is Password123!</H6>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default observer(TenantList);\r\n"],"names":["paginationInitialState","queryPageIndex","queryPageSize","totalPageCount","PAGE_CHANGED","PAGE_SIZE_CHANGED","TOTAL_PAGE_COUNT_CHANGED","reducer","state","type","payload","Error","pageSizeDefault","React","props","theme","useTheme","sx","border","borderRadius","borderColor","palette","mode","fontSize","color","StyledModalCard","styled","Card","top","left","maxWidth","minWidth","position","padding","boxShadow","shadows","transform","width","outline","breakpoints","down","StyledTableHeaderCell","TableCell","shouldForwardProp","prop","typography","pxToRem","text","disabled","p","column","StyledTableRow","TableRow","background","paper","rowClick","secondary","divider","StyledTableRowCell","StyledPagination","muiStyled","selected_row","backgroundColor","alpha","primary","light","content","height","main","Pagination","fontWeight","margin","globalFilter","setGlobalFilter","inputProps","value","setValue","onChange","useAsyncDebounce","undefined","e","target","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","pageOptions","pageIndex","pageSize","setPageSize","gotoPage","showFooter","hidePagination","isLoading","borderSpacing","borderCollapse","map","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","H6","opacity","render","row","getRowProps","onClick","original","Boolean","cells","cell","getCellProps","my","display","justifyContent","alignItems","xs","sm","spacing","marginY","direction","event","Number","input","option","count","length","shape","_","newPage","H5","disableRipple","marginLeft","StyledDarkTextField","TextField","minHeight","borderWidth","DarkTextField","fullWidth","DarkMenuItem","MenuItem","DarkStyledSelectInput","InputBase","StyledTextField","LightTextField","StyledSelectInput","paddingRight","PaginationSelectInput","marginRight","transition","transitions","create","fontFamily","join","SvgIcon","viewBox","d","fill","StyledInputBase","startAdornment","observer","open","onClose","data","tenantStore","useStore","updateTenant","loading","useState","id","name","isActive","createdOn","tenantFormValues","validationSchema","Yup","required","useFormik","initialValues","enableReinitialize","onSubmit","tenant","resetForm","toast","values","errors","handleChange","handleSubmit","touched","handleBlur","dirty","isSubmitting","isValid","Modal","H2","mb","Divider","Grid","mt","container","columnSpacing","className","item","placeholder","onBlur","error","helperText","FormGroup","FormControlLabel","control","Checkbox","checked","label","FlexBox","marginTop","Button","size","variant","LoadingButton","Header","accessor","Cell","textTransform","canFilter","toString","toLowerCase","openModal","setOpenModal","EditIconButton","Box","createTenant","adminEmail","password","email","createTenantRequest","commonStore","loadTenants","tenantsSorted","loadingInitial","setTitle","useMemo","columns","TenantColumnShape","initialState","useTable","useFilters","useGlobalFilter","useSortBy","useExpanded","usePagination","preGlobalFilteredRows","useEffect","pt","pb","md","GlobalFilter","endIcon","Add","ReactTable"],"sourceRoot":""}